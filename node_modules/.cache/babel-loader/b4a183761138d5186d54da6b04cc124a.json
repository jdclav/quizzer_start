{"ast":null,"code":"var _jsxFileName = \"/home/justin/quizzer_start/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Quizzer } from \"./quizzer/Quizzer\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//import { ShowHideTasks } from \"./tasks/ShowHideTasks\";\nfunction App() {\n  _s();\n\n  const [quizzer, setQuizzer] = useState(true);\n\n  function makeBlankQuestion(id, name, type) {\n    return {\n      id: id,\n      body: \"\",\n      type: type,\n      options: [],\n      submission: \"\",\n      expected: \"\",\n      points: 1,\n      published: false\n    };\n  }\n\n  function makeBlankQuiz() {\n    return {\n      id: 0,\n      title: \"\",\n      body: \"\",\n      published: false,\n      questionList: []\n    };\n  }\n\n  function testScript() {\n    console.log(\"test\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"UD CISC275 with React Hooks and TypeScript\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setQuizzer(!quizzer);\n        },\n        children: quizzer ? \"Quizzer\" : \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \"//\", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: quizzer ? \"block\" : \"none\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Quizzer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"rHUZ/ASpcL1D+oTj587qfT3glSE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/justin/quizzer_start/src/App.tsx"],"names":["React","useState","Quizzer","Button","App","quizzer","setQuizzer","makeBlankQuestion","id","name","type","body","options","submission","expected","points","published","makeBlankQuiz","title","questionList","testScript","console","log","display"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AASA;AAEA,SAASC,GAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAU,IAAV,CAAtC;;AAEA,WAASM,iBAAT,CACIC,EADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIY;AACR,WAAO;AACHF,MAAAA,EAAE,EAAEA,EADD;AAEHG,MAAAA,IAAI,EAAE,EAFH;AAGHD,MAAAA,IAAI,EAAEA,IAHH;AAIHE,MAAAA,OAAO,EAAE,EAJN;AAKHC,MAAAA,UAAU,EAAE,EALT;AAMHC,MAAAA,QAAQ,EAAE,EANP;AAOHC,MAAAA,MAAM,EAAE,CAPL;AAQHC,MAAAA,SAAS,EAAE;AARR,KAAP;AAUH;;AACD,WAASC,aAAT,GAAyB;AACrB,WAAO;AACHT,MAAAA,EAAE,EAAE,CADD;AAEHU,MAAAA,KAAK,EAAE,EAFJ;AAGHP,MAAAA,IAAI,EAAE,EAHH;AAIHK,MAAAA,SAAS,EAAE,KAJR;AAKHG,MAAAA,YAAY,EAAE;AALX,KAAP;AAOH;;AAED,WAASC,UAAT,GAAsB;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,4EAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAM;AACXhB,UAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,SAHL;AAAA,kBAKKA,OAAO,GAAG,SAAH,GAAe;AAL3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,qBAYI;AAAK,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAElB,OAAO,GAAG,OAAH,GAAa;AAA/B,OAAZ;AAAA,6BACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH;;GAnDQD,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Quizzer } from \"./quizzer/Quizzer\";\nimport { Button } from \"react-bootstrap\";\nimport { QuizQuestion } from \"./quizzer/QuizQuestion\";\nimport { Question, QuestionType } from \"./interfaces/question\";\nimport { QuestionEdit } from \"./quizzer/QuestionEdit\";\nimport { QuizEdit } from \"./quizzer/QuizEdit\";\nimport { QuizExpanded } from \"./quizzer/QuizExpanded\";\nimport { QuizView } from \"./quizzer/QuizView\";\nimport { QuizList } from \"./quizzer/QuizList\";\nimport { AddQuizModal } from \"./quizzer/AddQuizModal\";\n//import { ShowHideTasks } from \"./tasks/ShowHideTasks\";\n\nfunction App(): JSX.Element {\n    const [quizzer, setQuizzer] = useState<boolean>(true);\n\n    function makeBlankQuestion(\n        id: number,\n        name: string,\n        type: QuestionType\n    ): Question {\n        return {\n            id: id,\n            body: \"\",\n            type: type,\n            options: [],\n            submission: \"\",\n            expected: \"\",\n            points: 1,\n            published: false\n        };\n    }\n    function makeBlankQuiz() {\n        return {\n            id: 0,\n            title: \"\",\n            body: \"\",\n            published: false,\n            questionList: []\n        };\n    }\n\n    function testScript() {\n        console.log(\"test\");\n    }\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                UD CISC275 with React Hooks and TypeScript\n                <Button\n                    onClick={() => {\n                        setQuizzer(!quizzer);\n                    }}\n                >\n                    {quizzer ? \"Quizzer\" : \"Tasks\"}\n                </Button>\n            </header>\n            //\n            <div style={{ display: quizzer ? \"block\" : \"none\" }}>\n                <Quizzer></Quizzer>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}