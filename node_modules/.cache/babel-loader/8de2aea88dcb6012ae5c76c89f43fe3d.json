{"ast":null,"code":"var _jsxFileName = \"/home/justin/quizzer_start/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Button } from \"react-bootstrap\";\nimport { QuizQuestion } from \"./quizzer/QuizQuestion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n//import { ShowHideTasks } from \"./tasks/ShowHideTasks\";\nfunction App() {\n  _s();\n\n  const [quizzer, setQuizzer] = useState(true);\n\n  function makeBlankQuestion(id, name, type) {\n    return {\n      id: id,\n      body: \"\",\n      type: type,\n      options: [],\n      submission: \"\",\n      expected: \"\",\n      points: 1,\n      published: false\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"UD CISC275 with React Hooks and TypeScript\", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          setQuizzer(!quizzer);\n        },\n        children: quizzer ? \"Quizzer\" : \"Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuizQuestion, {\n      index: 1,\n      question: makeBlankQuestion(1, 'test', \"short_answer_question\"),\n      submitted: false,\n      handleSubmit: makeBlankQuestion,\n      addPoints: makeBlankQuestion,\n      editQuestionSub: makeBlankQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n} //<div style={{ display: quizzer ? \"block\" : \"none\" }}>\n//<Quizzer></Quizzer>\n//</div>\n\n\n_s(App, \"rHUZ/ASpcL1D+oTj587qfT3glSE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/justin/quizzer_start/src/App.tsx"],"names":["React","useState","Button","QuizQuestion","App","quizzer","setQuizzer","makeBlankQuestion","id","name","type","body","options","submission","expected","points","published"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AAEA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,YAAT,QAA6B,wBAA7B;;;AAEA;AAEA,SAASC,GAAT,GAA4B;AAAA;;AACxB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAU,IAAV,CAAtC;;AAEA,WAASM,iBAAT,CACIC,EADJ,EAEIC,IAFJ,EAGIC,IAHJ,EAIY;AACR,WAAO;AACHF,MAAAA,EAAE,EAAEA,EADD;AAEHG,MAAAA,IAAI,EAAE,EAFH;AAGHD,MAAAA,IAAI,EAAEA,IAHH;AAIHE,MAAAA,OAAO,EAAE,EAJN;AAKHC,MAAAA,UAAU,EAAE,EALT;AAMHC,MAAAA,QAAQ,EAAE,EANP;AAOHC,MAAAA,MAAM,EAAE,CAPL;AAQHC,MAAAA,SAAS,EAAE;AARR,KAAP;AAUH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,4EAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAE,MAAM;AACXV,UAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACH,SAHL;AAAA,kBAKKA,OAAO,GAAG,SAAH,GAAe;AAL3B;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAWI,QAAC,YAAD;AACI,MAAA,KAAK,EAAI,CADb;AAEI,MAAA,QAAQ,EAAIE,iBAAiB,CAAC,CAAD,EAAG,MAAH,EAAU,uBAAV,CAFjC;AAGI,MAAA,SAAS,EAAI,KAHjB;AAII,MAAA,YAAY,EAAGA,iBAJnB;AAKI,MAAA,SAAS,EAAGA,iBALhB;AAMI,MAAA,eAAe,EAAGA;AANtB;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,C,CACD;AACA;AACA;;;GA/CSH,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport { Quizzer } from \"./quizzer/Quizzer\";\nimport { Button } from \"react-bootstrap\";\nimport { QuizQuestion } from \"./quizzer/QuizQuestion\";\nimport { Question, QuestionType } from \"./interfaces/question\"\n//import { ShowHideTasks } from \"./tasks/ShowHideTasks\";\n\nfunction App(): JSX.Element {\n    const [quizzer, setQuizzer] = useState<boolean>(true);\n\n    function makeBlankQuestion(\n        id: number,\n        name: string,\n        type: QuestionType\n    ): Question {\n        return {\n            id: id,\n            body: \"\",\n            type: type,\n            options: [],\n            submission: \"\",\n            expected: \"\",\n            points: 1,\n            published: false\n        };\n    }\n\n\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                UD CISC275 with React Hooks and TypeScript\n                <Button\n                    onClick={() => {\n                        setQuizzer(!quizzer);\n                    }}\n                >\n                    {quizzer ? \"Quizzer\" : \"Tasks\"}\n                </Button>\n            </header>\n            <QuizQuestion \n                index = {1}\n                question = {makeBlankQuestion(1,'test',\"short_answer_question\")}\n                submitted = {false}\n                handleSubmit ={makeBlankQuestion}\n                addPoints ={makeBlankQuestion}\n                editQuestionSub ={makeBlankQuestion}\n                >\n                </QuizQuestion>\n        </div>\n    );\n}\n//<div style={{ display: quizzer ? \"block\" : \"none\" }}>\n//<Quizzer></Quizzer>\n//</div>\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}